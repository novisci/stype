# Generated by roxygen2: do not edit by hand

S3method(format,v_binary)
S3method(format,v_continuous)
S3method(median,v_continuous)
S3method(median,v_count)
S3method(obj_print_footer,v_binary)
S3method(obj_print_footer,v_continuous)
S3method(obj_print_footer,v_continuous_nonneg)
S3method(obj_print_footer,v_count)
S3method(obj_print_footer,v_event_time)
S3method(quantile,v_continuous)
S3method(quantile,v_count)
S3method(range,v_count)
S3method(type_sum,v_binary)
S3method(type_sum,v_continuous)
S3method(type_sum,v_continuous_nonneg)
S3method(type_sum,v_count)
S3method(type_sum,v_event_time)
S3method(vec_arith,double)
S3method(vec_arith,integer)
S3method(vec_arith,v_binary)
S3method(vec_arith,v_continuous)
S3method(vec_arith,v_count)
S3method(vec_arith.double,v_continuous)
S3method(vec_arith.integer,v_binary)
S3method(vec_arith.integer,v_count)
S3method(vec_arith.v_binary,default)
S3method(vec_arith.v_binary,integer)
S3method(vec_arith.v_binary,v_binary)
S3method(vec_arith.v_continuous,default)
S3method(vec_arith.v_continuous,double)
S3method(vec_arith.v_continuous,v_continuous)
S3method(vec_arith.v_count,default)
S3method(vec_arith.v_count,integer)
S3method(vec_arith.v_count,v_count)
S3method(vec_cast,v_binary)
S3method(vec_cast,v_continuous)
S3method(vec_cast,v_continuous_nonneg)
S3method(vec_cast,v_count)
S3method(vec_cast,v_event_time)
S3method(vec_cast.v_binary,default)
S3method(vec_cast.v_binary,logical)
S3method(vec_cast.v_binary,v_binary)
S3method(vec_cast.v_continuous,default)
S3method(vec_cast.v_continuous,double)
S3method(vec_cast.v_continuous,v_continuous)
S3method(vec_cast.v_continuous_nonneg,default)
S3method(vec_cast.v_continuous_nonneg,numeric)
S3method(vec_cast.v_continuous_nonneg,v_continuous_nonneg)
S3method(vec_cast.v_count,default)
S3method(vec_cast.v_count,integer)
S3method(vec_cast.v_count,numeric)
S3method(vec_cast.v_count,v_count)
S3method(vec_cast.v_event_time,default)
S3method(vec_cast.v_event_time,numeric)
S3method(vec_cast.v_event_time,v_event_time)
S3method(vec_math,v_binary)
S3method(vec_math,v_continuous)
S3method(vec_math,v_count)
S3method(vec_ptype_abbr,v_binary)
S3method(vec_ptype_abbr,v_continuous)
S3method(vec_ptype_abbr,v_continuous_nonneg)
S3method(vec_ptype_abbr,v_count)
S3method(vec_ptype_abbr,v_event_time)
S3method(vec_ptype_full,v_binary)
S3method(vec_ptype_full,v_continuous)
S3method(vec_ptype_full,v_continuous_nonneg)
S3method(vec_ptype_full,v_count)
S3method(vec_ptype_full,v_event_time)
S3method(vec_restore,v_binary)
S3method(vec_restore,v_continuous)
S3method(vec_restore,v_continuous_nonneg)
S3method(vec_restore,v_count)
S3method(vec_restore,v_event_time)
S3method(vec_type2,double)
S3method(vec_type2,numeric)
S3method(vec_type2,v_binary)
S3method(vec_type2,v_continuous)
S3method(vec_type2,v_continuous_nonneg)
S3method(vec_type2,v_count)
S3method(vec_type2,v_event_time)
S3method(vec_type2.double,default)
S3method(vec_type2.double,v_continuous)
S3method(vec_type2.integer,v_count)
S3method(vec_type2.logical,v_binary)
S3method(vec_type2.numeric,default)
S3method(vec_type2.numeric,v_continuous_nonneg)
S3method(vec_type2.numeric,v_event_time)
S3method(vec_type2.v_binary,default)
S3method(vec_type2.v_binary,logical)
S3method(vec_type2.v_binary,v_binary)
S3method(vec_type2.v_binary,vctrs_unspecified)
S3method(vec_type2.v_continuous,default)
S3method(vec_type2.v_continuous,double)
S3method(vec_type2.v_continuous,v_continuous)
S3method(vec_type2.v_continuous,vctrs_unspecified)
S3method(vec_type2.v_continuous_nonneg,default)
S3method(vec_type2.v_continuous_nonneg,numeric)
S3method(vec_type2.v_continuous_nonneg,v_continuous_nonneg)
S3method(vec_type2.v_continuous_nonneg,vctrs_unspecified)
S3method(vec_type2.v_count,default)
S3method(vec_type2.v_count,integer)
S3method(vec_type2.v_count,v_count)
S3method(vec_type2.v_count,vctrs_unspecified)
S3method(vec_type2.v_event_time,default)
S3method(vec_type2.v_event_time,numeric)
S3method(vec_type2.v_event_time,v_event_time)
S3method(vec_type2.v_event_time,vctrs_unspecified)
export()
export(as_binary)
export(as_continuous)
export(as_count)
export(as_event_time)
export(as_nonneg_continuous)
export(as_time_to_event)
export(atibble)
export(describe)
export(description)
export(descriptor)
export(getDescriptors)
export(glance)
export(is_binary)
export(is_continuous)
export(is_continuous_nonneg)
export(is_count)
export(is_event_time)
export(is_nonneg)
export(v_binary)
export(v_continuous)
export(v_continuous_nonneg)
export(v_count)
export(v_event_time)
export(variable)
export(vec_arith.double)
export(vec_arith.integer)
export(vec_arith.v_binary)
export(vec_arith.v_continuous)
export(vec_arith.v_count)
export(vec_cast.v_binary)
export(vec_cast.v_continuous)
export(vec_cast.v_continuous_nonneg)
export(vec_cast.v_count)
export(vec_cast.v_event_time)
export(vec_math.v_binary)
export(vec_math.v_continuous)
export(vec_math.v_count)
export(vec_type2.double)
export(vec_type2.numeric)
export(vec_type2.v_binary)
export(vec_type2.v_continuous)
export(vec_type2.v_continuous_nonneg)
export(vec_type2.v_count)
export(vec_type2.v_event_time)
exportMethods(describe)
exportMethods(getDescriptors)
exportMethods(glance)
exportMethods(show)
importClassesFrom(tibble,tbl_df)
importFrom(assertthat,validate_that)
importFrom(methods,callNextMethod)
importFrom(methods,is)
importFrom(methods,new)
importFrom(methods,setOldClass)
importFrom(methods,show)
importFrom(methods,slot)
importFrom(pillar,type_sum)
importFrom(purrr,map)
importFrom(purrr,map_dfr)
importFrom(purrr,reduce)
importFrom(purrr,walk)
importFrom(stats,IQR)
importFrom(stats,median)
importFrom(stats,quantile)
importFrom(stats,sd)
importFrom(stats,setNames)
importFrom(tibble,as_tibble)
importFrom(vctrs,new_vctr)
importFrom(vctrs,obj_print_footer)
importFrom(vctrs,vec_arith)
importFrom(vctrs,vec_arith_base)
importFrom(vctrs,vec_assert)
importFrom(vctrs,vec_cast)
importFrom(vctrs,vec_data)
importFrom(vctrs,vec_math)
importFrom(vctrs,vec_math_base)
importFrom(vctrs,vec_ptype_abbr)
importFrom(vctrs,vec_ptype_full)
importFrom(vctrs,vec_restore)
importFrom(vctrs,vec_type2)
importFrom(vctrs,vec_type2.integer)
importFrom(vctrs,vec_type2.logical)
