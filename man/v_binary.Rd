% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/v_binary.R
\name{v_binary}
\alias{v_binary}
\alias{bnry}
\alias{is_binary}
\alias{as_binary}
\alias{as.character.v_binary}
\alias{as_canonical.v_binary}
\title{Binary vectors}
\usage{
v_binary(
  x = ptypeFUN(),
  internal_name = "",
  context,
  auto_compute_summary = auto_compute_default,
  extra_descriptors = list()
)

bnry(
  x = ptypeFUN(),
  internal_name = "",
  context,
  auto_compute_summary = auto_compute_default,
  extra_descriptors = list()
)

is_binary(x)

as_binary(x)

\method{as.character}{v_binary}(x, ...)

\method{as_canonical}{v_binary}(x)
}
\arguments{
\item{x}{a \code{logical} vector or any vector that can be cast to a
\code{logical} vector via \code{\link[vctrs:vec_cast]{vctrs::vec_cast()}}
such as \code{integer} or \code{numeric} vectors with values in \{0, 1\}.}

\item{internal_name}{the internal name of the variable}

\item{context}{a \code{\link{context}}}

\item{auto_compute_summary}{an indicator of whether the \code{data_summary} is
automatically computed whenever a vector is initialized, subset, or
concatenated. Defaults to \code{TRUE}. If this option is set to \code{FALSE},
then \code{\link{get_data_summary}} is the only way to compute the summary.
The \code{\link{data_summary_l}} lens will return an empty \code{data_summary}.}

\item{extra_descriptors}{A \code{list} of \code{\link{descriptors}} functions
appended to the default \code{\link{descriptors}}.}

\item{...}{passed to other methods such as \code{as.character}}
}
\description{
Constructors and methods for a binary data type. \code{v_binary} and
\code{bnry} are synonyms that each create a new \code{v_binary} object
subclassed from \code{vctrs_vctr}. \cr\cr
Support: \eqn{\{0, 1\}} (plus \code{\link{NA}}) \cr
Prototype: \code{\link{logical}}
}
\examples{
# Example data
src_binary <- c(TRUE, FALSE, TRUE, FALSE, NA)

# Constructor for the `v_binary` class. One can also use `bnry` which is a
# synonym for the `v_binary` function.
v <- v_binary(
  x = src_binary,
  internal_name = "v_example",
  context = context(
    short_label = "important_var",
    long_label  = "Very important variable"
  ),
  extra_descriptors = list()
)

# Helper functions and methods
is_binary(v)
as_binary(src_binary)
as.character(v)
as_canonical(v)
}
\seealso{
Other stype types: 
\code{\link{tbl_analysis}},
\code{\link{v_continuous_nonneg}},
\code{\link{v_continuous}},
\code{\link{v_count}},
\code{\link{v_nominal}},
\code{\link{v_ordered}},
\code{\link{v_proportion}},
\code{\link{v_rcensored}}
}
\concept{stype types}
